Внедряем скрипт wait-for-it.sh!

При запуске двух контейнеров с помощью Docker compose
возникает следующая проблема. Docker ничего не знает
о зависимостях между приложениями в запускаемых контейнерах
и запускает их сразу все. Insurance Calculator зависит от
MySQL сервера и не поднимется без него. То есть сначала
должен подняться MqSQL сервер и создаться база данных
и только потом должен подниматься Insurance Calculator.

Так как Docker compose запускает все контейнеры сразу,
то MySQL сервер не успевает подняться и Insurance Calculator
падает из-за того что не может подключиться к базе данных.

Для решения этой проблемы нужно сделать так, чтобы приложение
Insurance Calculator стартовало только после того как поднимется
MqSQL сервер.

Первое, что можно сделать это прописать в docker-compose.yaml
файле зависимости одного контейнера от другого.

Добавьте к insurance-calculator-app параметр:
    depends_on:
      - db

Так можно указать, что один контейнер зависит от другого.
В таком случае Docker будет запускать их последовательно.

Но это все равно полностью не решает проблему!

Для старта любого приложения внутри контейнера нужно время.

Docker просто запускает контейнеры последовательно, но он не
ждет пока приложение внутри контейнера поднимется и будет готово
обрабатывать запросы.

Для решения этой проблемы можно воспользоваться следующей идеей.
Добавить в Insurance Calculator контейнер скрипт, который будет
ждать доступности указанного порта другого контейнера и только
после того как порт станет доступным в контейнере начнет запускаться
само Insurance Calculator приложение.

Этот скрипт называется wait-for-it.sh. Загуглите информацию про него!

Скачайте этот скрипт, разместите его рядом с Dockerfile.

Добавьте в Dockerfile следующие строки:

# Install bash - bash нужен для выполнения wait-for-it.sh
# RUN apk add --no-cache bash

COPY wait-for-it.sh wait-for-it.sh
RUN chmod +x /wait-for-it.sh


CMD ["./wait-for-it.sh", "mysql-container:3306", "--", "java", "-Dspring.profiles.active=mysql-container", "-jar", "insurance-calculator.jar"]

Добавьте в Gradle docker задачу:

docker {
	files 'wait-for-it.sh'
}

Создайте Insurance Calculator image заново (Gradle docker)
и запустите docker-compose up -d.

Теперь при запуске контейнера первым будет срабатывать
скрипт wait-for-it.sh, он будет ожидать когда станет доступным
mysql-container:3306 и только после этого начнет запускаться
само приложение.

Протестируйте это решение! Проблема с подключением к базе данных
должна решиться.
